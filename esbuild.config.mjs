import process from 'node:process'
import builtins from 'builtin-modules'
import esbuild from 'esbuild'

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`

const isProd = process.argv[2] === 'production'

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	outdir: './',
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins,
	],
	plugins: [
		{
			name: 'run rsync on rebuild',
			setup: (build) => {
				build.onStart(async () => {
					await Bun.$`echo 'starting rebuild...' && bun run sync`
				})
			},
		},
	],
	format: 'cjs',
	platform: 'node',
	target: 'es2018',
	logLevel: 'info',
	sourcemap: isProd ? false : 'inline',
	treeShaking: true,
})

if (isProd) {
	await context.rebuild()
	process.exit(0)
} else {
	await context.watch()
}
