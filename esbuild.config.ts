import builtins from 'builtin-modules'
import * as esbuild from 'esbuild'
import { styleText } from 'src/utils'

const randomHash = Math.random().toString(36).substring(2, 15)
const banner = `/*
Build ${randomHash} generated by esbuild
if you want to view the source, please visit the github repository of this plugin
*/
`

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	outdir: './',
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins,
	],
	plugins:
		process.env.NODE_ENV === 'development'
			? [
					{
						name: 'copy-plugin',
						setup: (build) => {
							build.initialOptions.define = {
								'process.env.NODE_ENV': '"development"',
							}
							build.onStart(async () => {
								console.log(
									styleText(
										'bgGreen',
										`starting rebuild...${new Date().toLocaleString()}`,
									),
								)
							})
							build.onEnd(async () => {
								const SOURCE_DIR = process.cwd()
								const { LOCAL_PLUGIN_PATH } = process.env
								if (!LOCAL_PLUGIN_PATH) {
									throw new Error('LOCAL_PLUGIN_PATH is not set')
								}

								await Bun.$`mkdir -p ${LOCAL_PLUGIN_PATH}`
								await Bun.$`cp -Rv ${SOURCE_DIR}/main.js ${SOURCE_DIR}/manifest.json ${SOURCE_DIR}/style.css ${LOCAL_PLUGIN_PATH}/`
								console.log(
									styleText('bgBlue', 'plugin files copied successfully'),
								)
							})
						},
					},
				]
			: undefined,
	format: 'cjs',
	platform: 'node',
	target: 'es2018',
	logLevel: 'info',
	sourcemap: process.env.NODE_ENV === 'production' ? false : 'inline',
	treeShaking: true,
})

if (process.env.NODE_ENV === 'development') {
	await context.watch()
} else {
	await context.rebuild()
	process.exit(0)
}
